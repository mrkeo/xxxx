{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-emma/components/page.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma-core/src/templates/page-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emma/src/@lekoarts/gatsby-theme-emma-core/components/page.tsx"],"names":["Page","page","data","titleProps","useSpring","config","slow","from","opacity","transform","to","contentProps","delay","title","description","excerpt","pathname","slug","image","cover","childImageSharp","fluid","slim","sx","position","bottom","left","right","maxWidth","margin","padding","zIndex","flexDirection","div","style","as","variant","body","PageComponent","props","query"],"mappings":"wPA+DeA,EAzCF,SAAC,GAAkC,IAAxBC,EAAwB,EAAhCC,KAAQD,KAChBE,EAAaC,YAAU,CAC3BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,EAAGC,UAAW,4BAC/BC,GAAI,CAAEF,QAAS,EAAGC,UAAW,0BAEzBE,EAAeP,YAAU,CAAEC,OAAQA,IAAOC,KAAMM,MAAO,IAAML,KAAM,CAAEC,QAAS,GAAKE,GAAI,CAAEF,QAAS,KAExG,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKK,MAAOZ,EAAKY,MAAOC,YAAab,EAAKc,QAASC,SAAUf,EAAKgB,OAClE,YAAC,IAAD,CAAMC,MAAOjB,EAAKkB,MAAMC,gBAAgBC,MAAOC,MAAI,GACjD,YAAC,IAAD,CACEC,GAAI,CACFC,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,SAAU,MACVC,OAAQ,SACRC,QAAS,EACTC,OAAQ,EACRC,cAAe,WAGjB,YAAC,IAASC,IAAV,CAAcC,MAAO/B,GACnB,YAAC,IAAD,CAASgC,GAAG,KAAKC,QAAQ,aACtBnC,EAAKY,UAKd,YAAC,IAAD,KACE,YAAC,IAASoB,IAAV,CAAcC,MAAOvB,GACnB,YAAC,cAAD,KAAcV,EAAKoC,UCrDdC,UCQA,YAA2C,IAAhBC,EAAgB,oBACxD,OAAO,YAAC,EAASA,IDTJD,IAEFE,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-emma-core-src-templates-page-query-tsx-4ed14376f016ef98eed8.js","sourcesContent":["/** @jsx jsx */\r\nimport { animated, useSpring, config } from \"react-spring\"\r\nimport { Container, jsx, Flex, Heading } from \"theme-ui\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport Layout from \"./layout\"\r\nimport SEO from \"./seo\"\r\nimport { ChildImageSharp } from \"../types\"\r\nimport Hero from \"./hero\"\r\n\r\ntype PageProps = {\r\n  data: {\r\n    page: {\r\n      title: string\r\n      slug: string\r\n      excerpt: string\r\n      body: string\r\n      cover: ChildImageSharp\r\n    }\r\n  }\r\n  [key: string]: any\r\n}\r\n\r\nconst Page = ({ data: { page } }: PageProps) => {\r\n  const titleProps = useSpring({\r\n    config: config.slow,\r\n    from: { opacity: 0, transform: `translate3d(0, -30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const contentProps = useSpring({ config: config.slow, delay: 1000, from: { opacity: 0 }, to: { opacity: 1 } })\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={page.title} description={page.excerpt} pathname={page.slug} />\r\n      <Hero image={page.cover.childImageSharp.fluid} slim>\r\n        <Flex\r\n          sx={{\r\n            position: `absolute`,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            maxWidth: `5xl`,\r\n            margin: `0 auto`,\r\n            padding: 4,\r\n            zIndex: 2,\r\n            flexDirection: `column`,\r\n          }}\r\n        >\r\n          <animated.div style={titleProps}>\r\n            <Heading as=\"h1\" variant=\"styles.h1\">\r\n              {page.title}\r\n            </Heading>\r\n          </animated.div>\r\n        </Flex>\r\n      </Hero>\r\n      <Container>\r\n        <animated.div style={contentProps}>\r\n          <MDXRenderer>{page.body}</MDXRenderer>\r\n        </animated.div>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { graphql } from \"gatsby\"\nimport PageComponent from \"../components/page\"\n\nexport default PageComponent\n\nexport const query = graphql`\n  query($slug: String!) {\n    page(slug: { eq: $slug }) {\n      title\n      slug\n      excerpt\n      body\n      cover {\n        childImageSharp {\n          fluid(maxWidth: 1920, quality: 90) {\n            ...GatsbyImageSharpFluid_withWebp\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Page from \"../../../components/page\"\n\ntype Props = {\n  data: {\n    page: any\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function EmmaCorePage({ ...props }: Props) {\n  return <Page {...props} />\n}\n"],"sourceRoot":""}